import{_ as t,o as e,c as a,Q as r}from"./chunks/framework.4ae1a61c.js";const l="/assets/blog3.0-login.62e6be41.png",s="/assets/blog4.0-login.996db85a.png",n="/assets/blog4.0-posts.41a5bf6c.png",i="/assets/blog4.0-playground.92f33ab2.png",o="/assets/blog4.0-profile.681c7123.png",f=JSON.parse('{"title":"写在前面","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"daily/introduce.md","filePath":"daily/introduce.md","lastUpdated":1699603953000}'),d={name:"daily/introduce.md"},p=r('<h1 id="写在前面" tabindex="-1">写在前面 <a class="header-anchor" href="#写在前面" aria-label="Permalink to &quot;写在前面&quot;">​</a></h1><p>写博客是我选择这个专业后一直想去做的事，不管是技术文章（虽然我目前的技术很水）还是日常。没有别的原因，还是因为懒，得给自己来两巴掌先。这次郑重决定开始坚持写些文章，不管是凑字数还是真正的文章，我都坚持至少一星期写一篇(记录下时间 2023-11-08)。就当记录下自己工作和生活日常吧。</p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>我在 2022 年 6 月从一个大专毕业出来，现在已经工作一年多接近两年了。其实从 21 年 12 月我就已经出来工作了。虽然工作了这么久，但我还只是一个初级的水平。没错，我就是在这个行业里当一个混子。这个博客我就只打算随便写写想说的话，记录技术时也不会写的那么专业，就完全一个我自己能看懂的水平就够了，嗯。</p><h2 id="我的博客历程" tabindex="-1">我的博客历程 <a class="header-anchor" href="#我的博客历程" aria-label="Permalink to &quot;我的博客历程&quot;">​</a></h2><p>现在暂时先用 vitepress 记录这些博客内容，之后我会按计划写一个博客项目，包括前后端都自己做。 很早开始我就已经在着手写博客项目了，我很喜欢去尝试新技术，但又因为能力不足而每次都放弃。我下面理一理我用过多少东西做过半路死掉的博客😅。</p><h3 id="v1-0" tabindex="-1">V1.0 <a class="header-anchor" href="#v1-0" aria-label="Permalink to &quot;V1.0&quot;">​</a></h3><p>最开始是刚学的时候，当时学的还是 React，又碰上了毕业设计，我就索性把博客项目当作毕业设计来做。当时前端用的技术栈是<a href="https://zh-hans.react.dev/" target="_blank" rel="noreferrer">React</a>, <a href="https://nextjs.org/" target="_blank" rel="noreferrer">Next.js</a>, <a href="https://redux-toolkit.js.org/" target="_blank" rel="noreferrer">Redux-toolkit</a>, <a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">tailwindcss</a>。当时 node.js 还没去学习，前端管理后台就用的国外比较流行的内容管理系统（CMS），用的是<a href="https://strapi.io/" target="_blank" rel="noreferrer">strapi</a>。</p><p>很难想象我在 18，19 年就在用这些东西。我也没想过我这么菜还在用这些东西这么先进的东西，我的同学完全看不懂我的东西🤣，Next.js，我这种乳臭未干的小子还能用，笑死了。当时也是觉得看起来牛逼才用的，没有考虑其他问题。这个项目开发初期现在想来也太无脑了，完全没考虑需求。所以结果可想而知，必然是失败。前端页面倒是做了，这个 CMS 因为是国外主流，国内没流行，文档全是英文，而且教程也稀少。按照文档创建项目到部署的时候我完全搞不懂了。</p><h3 id="v2-0" tabindex="-1">V2.0 <a class="header-anchor" href="#v2-0" aria-label="Permalink to &quot;V2.0&quot;">​</a></h3><p>当时因为<a href="https://strapi.io/" target="_blank" rel="noreferrer">strapi</a>无法部署在线上使用，所以我反手就去学习 node.js，绝对自己做个后端出来。附上我看的课程<a href="https://www.bilibili.com/video/BV1FY4y1H7ka" target="_blank" rel="noreferrer">【Udemy 付费课程】Node.js, Express, MongoDB &amp; More: The Complete Bootcamp 2022</a>。</p><details class="details custom-block"><summary>一个一直想吐槽的题外话</summary><p>我其实是比较讨厌国内的视频教程，看着那个视频时长就把我吓着了，当下定决心看的时候，又发现视频里废话一大堆和一些无意义的玩笑。我并不是崇洋媚外。虽然国内的前端技术已经发展的很不错了，包括 Vue，但是我认为不可否认国外的技术是比我们强的，这是显而易见的。所以我更愿意看国外的视频教程和探索国外流行的技术(这个应该就是想装装逼，扩大自己的了解知识面😁)。</p></details><p>当时课程学了 2/3 就开始着手博客后端了。具体原因忘了，但我依稀记得我不知道这个博客我要怎样开发，开发哪些功能，有哪些流程。只写了博客的增删改查我就停了。这个半成品到此也就结束了它的生命。</p><h3 id="v3-0" tabindex="-1">V3.0 <a class="header-anchor" href="#v3-0" aria-label="Permalink to &quot;V3.0&quot;">​</a></h3><p>这个版本是在上一家公司闲暇的时间慢慢摸索的，只做了大部分的管理后台和后端，博客官网没做。 这个时候我已经早就放弃了 React，因为它的特殊，我找不到工作，所以就转到 Vue 了。功能也只有简单的博客的增删改查，登录，个人中心。这个时候用的技术栈是 Vue, Vuetify, tailwindcss, pinia。也是喜欢尝试不一样的东西，这个指的是 UI 库，我很喜欢这种简洁但又不失优雅的样式。</p><p><a href="https://blog-app-admin.vercel.app/" target="_blank" rel="noreferrer"><img src="'+l+'" alt="博客3.0后台管理的登录页" title="博客3.0后台管理"></a></p><p>这个网站因为部署在 Vercel 上，所以应该需要科学上网才能进。但是只能看这个登录页，仅此而已。因为我忘了登录密码。我甚至懒得把这个网站给停掉。</p><h3 id="v4-0" tabindex="-1">V4.0 <a class="header-anchor" href="#v4-0" aria-label="Permalink to &quot;V4.0&quot;">​</a></h3><p>这个版本是在上一家公司离职后，在求职过程中写的，这个跟 3.0 版本进度是一样的，也是只做了管理后台和后端，博客官网还没做。但是内容相对 3.0 多了挺多的。</p><blockquote><p>登录，(第三方登录功能还没做)<br> 文章<br> 文章的分类和标签<br> 文章的时间归档<br> ChatGPT<br> 代码在线编辑(在线 editor)<br> 个人中心<br> TODO<br> Unsplash 图片库<br></p></blockquote><p><a href="https://leet-programming.site/" target="_blank" rel="noreferrer"><img src="'+s+'" alt="博客4.0后台管理的登录页" title="博客4.0后台管理"></a></p><p>当你点击这个地址是可能我的域名已经过期了。下面展示几个网站的效果图：</p><p><img src="'+n+'" alt="文章列表" title="文章列表"></p><p><img src="'+i+'" alt="Code Playground" title="Code Playground"></p><p><img src="'+o+'" alt="个人中心" title="个人中心"></p><p>是不是感觉很不错。但是因为我野心很大，还没做就想了好多东西都想加进去，现在是加了很多功能，但是卵用没用，就是些花里胡哨。虽然但是我还是挺喜欢这个后台管理页面的。</p><h2 id="目标以及计划" tabindex="-1">目标以及计划 <a class="header-anchor" href="#目标以及计划" aria-label="Permalink to &quot;目标以及计划&quot;">​</a></h2><p>一个普通家庭没有背景无法依靠其他东西时，其实程序员是个很好的出路。我还会接着走这条路，一直提高自己的技术能力。</p><p>目前的实力我也只能是做点普通的业务和页面，偶尔会碰到些难点。又因为我是公司唯一一个前端(因为公司重点不在这上面，所以一个人就足以支持所有前端需求)，碰到难点也只能我一个人解决，看文档，在 github，stackoverflow 找答案。</p><p>我想学的技术还有很多很多，我知道先去扩展知识的广度不太可取，所有我近期还是挖掘我自己去提高技术深度。我认为我的 Javascript 不是特别的扎实，但是能应付的了大部分简单普通的业务场景，相对有点难度的我自己就无法单独解决，得面向谷歌和 GPT 了。</p><p>下面这些技术是我想去深入了解并掌握的，包含了许多方面：</p><table><thead><tr><th style="text-align:center;">前端</th><th style="text-align:center;">后端</th><th style="text-align:center;">UI/UX</th></tr></thead><tbody><tr><td style="text-align:center;">JavaScript</td><td style="text-align:center;">Node.js</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">TypeScript</td><td style="text-align:center;">Express.js</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">Vue 生态</td><td style="text-align:center;">Nest.js</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">React 生态</td><td style="text-align:center;">Docker</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">Nuxt.js</td><td style="text-align:center;">Nginx</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">Next.js</td><td style="text-align:center;">服务器相关</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">tailwindcss</td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">各个热门 UI 库</td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr></tbody></table><p>我只是以我的认识区分了，应该有很多分错了类。我为什么会像学 UI 设计，可能看多了国外的 UI 以及教程，他们都是极简的设计，我是非常喜欢这种设计的，比如苹果的设计。我看过我公司的设计只有少部分我认为是不错的，所有我想学习 UI 让我能独自考虑项目的设计(自己的项目)。</p><p>暂时就先写到这里，以后有吐槽或者想说的话，我打算就在这里更新了，也有可能再单独开一个页面来记录。</p>',34),c=[p];function h(g,b,x,_,u,m){return e(),a("div",null,c)}const k=t(d,[["render",h]]);export{f as __pageData,k as default};
